from airflow import DAG
from airflow.operators.python import PythonOperator
from datetime import datetime, timedelta

default_args = {
    "owner": "airflow",
    "depends_on_past": False,
    "start_date": datetime(2025, 1, 1),
    "email_on_failure": False,
    "email_on_retry": False,
    "retries": 1,
    "retry_delay": timedelta(minutes=5),
}

def extract(**context):
    print("Extracting data from {{ source }}")

def transform(**context):
    print("Transforming data with columns: {{ input_features }}")

def load(**context):
    print("Loading data to {{ destination }}")

with DAG(
    dag_id="{{ dag_id }}",
    default_args=default_args,
    description="{{ description }}",
    schedule="{{ schedule }}",
    catchup=False,
    is_paused_upon_creation=False,
) as dag:
    t1 = PythonOperator(task_id="extract", python_callable=extract)
    t2 = PythonOperator(task_id="transform", python_callable=transform)
    t3 = PythonOperator(task_id="load", python_callable=load)

    t1 >> t2 >> t3
